{"ast":null,"code":"var _jsxFileName = \"/home/techmanager/Documents/React_D03/src/index.jsx\";\nimport React from 'react';\nimport ReactDOM from \"react-dom\";\nimport Table from './Table';\nimport FormNewEntry from './FormNewEntry';\nimport Total from './Total';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDelete = id => {\n      console.log(id);\n      const RemainEntries = this.state.entries.filter(entry => entry.id !== id);\n      this.setState({\n        entries: RemainEntries\n      }, function () {\n        UPT;\n      });\n      let Somme = this.updateTotal();\n      this.setState({\n        total: Somme\n      });\n      console.log(Somme);\n    };\n\n    this.handleNewEntry = event => {\n      event.preventDefault();\n      const NewEntry = {\n        id: Date(),\n        name: event.currentTarget.name.value,\n        desc: event.currentTarget.descript.value,\n        price: parseInt(event.currentTarget.price.value)\n      };\n      var rows = this.state.entries;\n      rows.push(NewEntry);\n      this.setState({\n        entries: rows\n      });\n      event.currentTarget.name.value = '';\n      event.currentTarget.descript.value = '';\n      event.currentTarget.price.value = '';\n      let Somme = this.updateTotal();\n      this.setState({\n        total: Somme\n      });\n      console.log(Somme);\n    };\n\n    this.state = {\n      entries: [{\n        id: 1,\n        name: \"Loto ticket\",\n        desc: \"\",\n        price: 20\n      }, {\n        id: 2,\n        name: \"Beers\",\n        desc: \"Party night \\\\o/\",\n        price: -15\n      }, {\n        id: 3,\n        name: \"Phone Bill\",\n        desc: \"January\",\n        price: -29.99\n      }],\n      total: 0\n    };\n  }\n\n  UPT() {\n    let Somme = this.updateTotal();\n    this.setState({\n      total: Somme\n    });\n    console.log(Somme);\n  }\n\n  updateTotal(enter) {\n    const prices = [];\n    this.state.entries.map(elem => {\n      prices.push(elem.price);\n      return null;\n    });\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n    let Total = prices.reduce(reducer);\n    console.log(Total);\n    this.setState({\n      total: Total\n    });\n  }\n\n  componentDidMount() {\n    let Somme = this.updateTotal();\n    this.setState({\n      total: Somme\n    });\n    console.log(Somme);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      entries: this.state.entries,\n      handleDelete: this.handleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Total, {\n      entries: this.state.entries,\n      somme: this.state.total,\n      GetTotal: this.updateTotal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(FormNewEntry, {\n      handleNewEntry: this.handleNewEntry,\n      GetTotal: this.updateTotal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/techmanager/Documents/React_D03/src/index.jsx"],"names":["React","ReactDOM","Table","FormNewEntry","Total","App","Component","constructor","props","handleDelete","id","console","log","RemainEntries","state","entries","filter","entry","setState","UPT","Somme","updateTotal","total","handleNewEntry","event","preventDefault","NewEntry","Date","name","currentTarget","value","desc","descript","price","parseInt","rows","push","enter","prices","map","elem","reducer","accumulator","currentValue","reduce","componentDidMount","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from \"react-dom\"\nimport Table from './Table'\nimport FormNewEntry from './FormNewEntry'\nimport Total from './Total'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            entries: [\n                { id: 1, name: \"Loto ticket\", desc: \"\", price: 20 },\n                { id: 2, name: \"Beers\", desc: \"Party night \\\\o/\", price: -15 },\n                { id: 3, name: \"Phone Bill\", desc: \"January\", price: -29.99 },\n            ],\n            total: 0\n        }\n    }\n\n    UPT () {\n        let Somme = this.updateTotal()\n        this.setState({total: Somme})\n        console.log(Somme)\n    } \n\n    handleDelete = (id) => {\n        console.log(id)\n        const RemainEntries = this.state.entries.filter(entry => entry.id !== id)\n        this.setState({entries: RemainEntries}, function () {UPT})\n        \n        let Somme = this.updateTotal()\n        this.setState({total: Somme})\n        console.log(Somme)\n\n    }\n\n    handleNewEntry = (event) => {\n        event.preventDefault()\n        const NewEntry = {id: Date(), \n                          name: event.currentTarget.name.value,\n                          desc: event.currentTarget.descript.value,\n                          price: parseInt(event.currentTarget.price.value)\n                        }\n\n        var rows = this.state.entries\n        rows.push(NewEntry)\n        this.setState({entries: rows})\n        \n        event.currentTarget.name.value = ''\n        event.currentTarget.descript.value = ''\n        event.currentTarget.price.value = ''\n\n        let Somme = this.updateTotal()\n        this.setState({total: Somme})\n        console.log(Somme)\n\n\n    }\n\n    updateTotal(enter) {\n        const prices = []\n        this.state.entries.map((elem) => {\n            prices.push(elem.price)\n            return(\n                null\n            )\n        })\n\n        const reducer = (accumulator, currentValue) => accumulator + currentValue;\n        let Total = prices.reduce(reducer)\n        console.log(Total)\n        \n        this.setState({total: Total})\n       \n    }\n    componentDidMount() {\n        let Somme = this.updateTotal()\n        this.setState({total: Somme})\n        console.log(Somme)\n    }\n\n    render() {\n        return (\n            <div>\n                <Table entries={this.state.entries} handleDelete={this.handleDelete} />\n                <Total entries={this.state.entries} somme={this.state.total} GetTotal={this.updateTotal}/>\n                <FormNewEntry handleNewEntry={this.handleNewEntry} GetTotal={this.updateTotal}/>\n            </div>\n        )\n    }\n}\n\nReactDOM.render(<App/>, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}