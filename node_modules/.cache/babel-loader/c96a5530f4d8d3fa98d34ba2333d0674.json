{"ast":null,"code":"var _jsxFileName = \"/home/techmanager/Documents/React_D03/src/index.jsx\";\nimport React from 'react';\nimport ReactDOM from \"react-dom\";\nimport Table from './Table';\nimport FormNewEntry from './FormNewEntry';\nimport Total from './Total';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDelete = id => {\n      console.log(id);\n      const RemainEntries = this.state.entries.filter(entry => entry.id !== id);\n      this.setState({\n        entries: RemainEntries\n      }, () => {\n        if (this.state.entries.length > 0) {\n          const prices = [];\n          this.state.entries.map(elem => {\n            prices.push(elem.price);\n            return null;\n          });\n\n          const reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n          let Total = prices.reduce(reducer);\n          console.log(Total);\n          this.setState({\n            total: Total\n          });\n        } else {\n          this.setState({\n            total: 0\n          });\n        }\n      });\n    };\n\n    this.handleNewEntry = event => {\n      event.preventDefault();\n      const NewEntry = {\n        id: Date(),\n        name: event.currentTarget.name.value,\n        desc: event.currentTarget.descript.value,\n        price: parseInt(event.currentTarget.price.value)\n      };\n      var rows = this.state.entries;\n      rows.push(NewEntry);\n      this.setState({\n        entries: rows\n      });\n      event.currentTarget.name.value = '';\n      event.currentTarget.descript.value = '';\n      event.currentTarget.price.value = '';\n      let Somme = this.updateTotal();\n      this.setState({\n        total: Somme\n      });\n      console.log(Somme);\n    };\n\n    this.state = {\n      entries: [{\n        id: 1,\n        name: \"Loto ticket\",\n        desc: \"\",\n        price: 20\n      }, {\n        id: 2,\n        name: \"Beers\",\n        desc: \"Party night \\\\o/\",\n        price: -15\n      }, {\n        id: 3,\n        name: \"Phone Bill\",\n        desc: \"January\",\n        price: -29.99\n      }],\n      total: 0\n    };\n  }\n\n  updateTotal() {\n    const prices = [];\n    this.state.entries.map(elem => {\n      prices.push(elem.price);\n      return null;\n    });\n\n    const reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n    let Total = prices.reduce(reducer);\n    console.log(Total);\n    return Total;\n  }\n\n  componentDidMount() {\n    let Somme = this.updateTotal();\n    this.setState({\n      total: Somme\n    });\n    console.log(Somme);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      entries: this.state.entries,\n      handleDelete: this.handleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Total, {\n      somme: this.state.total,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(FormNewEntry, {\n      handleNewEntry: this.handleNewEntry,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/techmanager/Documents/React_D03/src/index.jsx"],"names":["React","ReactDOM","Table","FormNewEntry","Total","App","Component","constructor","props","handleDelete","id","console","log","RemainEntries","state","entries","filter","entry","setState","length","prices","map","elem","push","price","reducer","accumulator","currentValue","reduce","total","handleNewEntry","event","preventDefault","NewEntry","Date","name","currentTarget","value","desc","descript","parseInt","rows","Somme","updateTotal","componentDidMount","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from \"react-dom\"\nimport Table from './Table'\nimport FormNewEntry from './FormNewEntry'\nimport Total from './Total'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            entries: [\n                { id: 1, name: \"Loto ticket\", desc: \"\", price: 20 },\n                { id: 2, name: \"Beers\", desc: \"Party night \\\\o/\", price: -15 },\n                { id: 3, name: \"Phone Bill\", desc: \"January\", price: -29.99 },\n            ],\n            total: 0\n        }\n    }\n\n\n\n    handleDelete = (id) => {\n        console.log(id)\n        const RemainEntries = this.state.entries.filter(entry => entry.id !== id)\n        this.setState({entries: RemainEntries}, () => {if (this.state.entries.length > 0) {const prices = []\n         this.state.entries.map((elem) => {\n                prices.push(elem.price)\n        return(\n             null\n         )\n        })\n    \n            const reducer = (accumulator, currentValue) => accumulator + currentValue;\n            let Total = prices.reduce(reducer)\n            console.log(Total)\n            this.setState({total: Total})}\n        else {this.setState({total: 0})}})\n        \n    }\n\n    handleNewEntry = (event) => {\n        event.preventDefault()\n        const NewEntry = {id: Date(), \n                          name: event.currentTarget.name.value,\n                          desc: event.currentTarget.descript.value,\n                          price: parseInt(event.currentTarget.price.value)\n                        }\n\n        var rows = this.state.entries\n        rows.push(NewEntry)\n        this.setState({entries: rows})\n        \n        event.currentTarget.name.value = ''\n        event.currentTarget.descript.value = ''\n        event.currentTarget.price.value = ''\n\n        let Somme = this.updateTotal()\n        this.setState({total: Somme})\n        console.log(Somme)\n\n\n    }\n\n    updateTotal() {\n        const prices = []\n        this.state.entries.map((elem) => {\n            prices.push(elem.price)\n            return(\n                null\n            )\n        })\n\n        const reducer = (accumulator, currentValue) => accumulator + currentValue;\n        let Total = prices.reduce(reducer)\n        console.log(Total)\n        return (Total)\n       \n    }\n    componentDidMount() {\n        let Somme = this.updateTotal()\n        this.setState({total: Somme})\n        console.log(Somme)\n    }\n\n    render() {\n        return (\n            <div>\n                <Table entries={this.state.entries} handleDelete={this.handleDelete} />\n                <Total somme={this.state.total} />\n                <FormNewEntry handleNewEntry={this.handleNewEntry} />\n            </div>\n        )\n    }\n}\n\nReactDOM.render(<App/>, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}