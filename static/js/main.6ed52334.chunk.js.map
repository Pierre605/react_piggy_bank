{"version":3,"sources":["Table.jsx","FormNewEntry.jsx","Total.jsx","index.jsx"],"names":["Table","props","react_default","a","createElement","className","entries","map","elem","key","id","name","desc","price","onClick","handleDelete","FormNewEntry","Fragment","onSubmit","handleNewEntry","type","required","Total","somme","App","_this","Object","classCallCheck","this","_super","call","console","log","RemainEntries","state","filter","entry","setState","length","prices","push","reduce","accumulator","currentValue","total","event","preventDefault","NewEntry","Date","currentTarget","value","descript","parseInt","rows","Somme","updateTotal","src_Table","src_Total","src_FormNewEntry","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6ed52334.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Table(props) {\n    return (\n        <table className=\"table\">\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Description</th>\n                    <th>Price</th>\n                </tr>\n            </thead>\n            <tbody>\n            {props.entries.map((elem) => {\n                return (\n                <tr key={elem.id}>\n                    <td>{elem.name}</td>\n                    <td>{elem.desc}</td>\n                    <td>{elem.price}</td>\n                    <td><button onClick={() => props.handleDelete(elem.id)}>X</button></td>\n                </tr>\n            )})}\n            </tbody>\n\n        </table>\n    )\n}\n\nexport default Table;","import React from \"react\"\n\nfunction FormNewEntry(props) {\n    return (\n        <>\n        <h1>Add new expense</h1>\n\t\t<form id=\"form\" onSubmit={props.handleNewEntry}>\n\t\t\t<div>\n\t\t\t<label className=\"form-label\">Name</label>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input className=\"form-control\" type=\"text\" id=\"name\" required/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<label className=\"form-label\">Description</label>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input className=\"form-control\" type=\"text\" id=\"descript\"/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<label className=\"form-label\">Price</label>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<input className=\"form-control\" type=\"text\" id=\"price\" required/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<button type=\"submit\">Add expense</button>\n\t\t\t</div>\n\t\t</form>\n        </>\n    )\n}\n\n\nexport default FormNewEntry","import React from 'react'\n\nfunction Total (props) {\n    return (\n        <>\n        <div>TOTAL: {props.somme}</div>\n        </>\n    )\n}\n\n\nexport default Total","import React from 'react'\nimport ReactDOM from \"react-dom\"\nimport Table from './Table'\nimport FormNewEntry from './FormNewEntry'\nimport Total from './Total'\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            entries: [\n                { id: 1, name: \"Loto ticket\", desc: \"\", price: 20 },\n                { id: 2, name: \"Beers\", desc: \"Party night \\\\o/\", price: -15 },\n                { id: 3, name: \"Phone Bill\", desc: \"January\", price: -29.99 },\n            ],\n            total: 0\n        }\n    }\n\n\n\n    handleDelete = (id) => {\n        console.log(id)\n        const RemainEntries = this.state.entries.filter(entry => entry.id !== id)\n        this.setState({entries: RemainEntries}, () => {if (this.state.entries.length > 0) {const prices = []\n         this.state.entries.map((elem) => {\n                prices.push(elem.price)\n        return(\n             null\n         )\n        })\n    \n            const reducer = (accumulator, currentValue) => accumulator + currentValue;\n            let Total = prices.reduce(reducer)\n            console.log(Total)\n            this.setState({total: Total})}\n            \n        else {this.setState({total: 0})}})\n        \n    }\n\n    handleNewEntry = (event) => {\n        event.preventDefault()\n        const NewEntry = {id: Date(), \n                          name: event.currentTarget.name.value,\n                          desc: event.currentTarget.descript.value,\n                          price: parseInt(event.currentTarget.price.value)\n                        }\n\n        var rows = this.state.entries\n        rows.push(NewEntry)\n        this.setState({entries: rows})\n        \n        event.currentTarget.name.value = ''\n        event.currentTarget.descript.value = ''\n        event.currentTarget.price.value = ''\n\n        let Somme = this.updateTotal()\n        this.setState({total: Somme})\n        console.log(Somme)\n\n\n    }\n\n    updateTotal() {\n        const prices = []\n        this.state.entries.map((elem) => {\n            prices.push(elem.price)\n            return(\n                null\n            )\n        })\n\n        const reducer = (accumulator, currentValue) => accumulator + currentValue;\n        let Total = prices.reduce(reducer)\n        console.log(Total)\n        return (Total)\n       \n    }\n    componentDidMount() {\n        let Somme = this.updateTotal()\n        this.setState({total: Somme})\n        console.log(Somme)\n    }\n\n    render() {\n        return (\n            <div>\n                <Table entries={this.state.entries} handleDelete={this.handleDelete} />\n                <Total somme={this.state.total} />\n                <FormNewEntry handleNewEntry={this.handleNewEntry} />\n            </div>\n        )\n    }\n}\n\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}